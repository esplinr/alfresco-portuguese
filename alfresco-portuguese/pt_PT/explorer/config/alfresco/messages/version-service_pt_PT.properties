
# Version service externalised display strings

version_service.err_restore_exists=O nó {0} não pode ser restaurado porque ele já existe.
version_service.err_not_found=O rótulo da versão atual do nó não existe no histórico.
version_service.err_unsupported=A implementação atual do serviço versão oferece suporte à criação de sucursais.
version_service.err_one_preceeding=A implementação atual do serviço versão só oferece suporte a uma versão anterior.
version_service.err_restore_no_version=O nó {0} não pode ser restaurado uma vez que não há nenhuma informação de versão disponível para esse nó.
version_service.err_revert_mismatch=A versão fornecida para reverter para não vem do histórico de nós.


version_service.migration.patch.noop=Nenhuma ação (nenhum histórico de versão encontrado no armazenamento de versão antiga)

version_service.migration.patch.complete=Migração concluída - migrados {0} (fora de {1}) históricos de versões antigas (para armazenamento de nova versão) em {2} segundos (deleteImmediately = {3})
version_service.migration.patch.in_progress=Migração em processo - migrados {0} (fora de {1}) históricos de versões antigas (para armazenamento de nova versão) em {2} segundos (deleteImmediately = {3})
version_service.migration.patch.warn.skip1=Migração ignorada de {0} (fora de {1}) lotes de históricos de versões antigas (migração incompleta) em {2} secs
version_service.migration.patch.warn.skip2=Migração ignorada de {0} histórico de versões antigas (já migradas)

version_service.migration.delete.complete=Terminada a exclusão em segundo plano para {0} (fora de {1}) migrado histórico de versão (do armazenamento de versões antigas) em {2} secs
version_service.migration.delete.warn.skip1=Pulada a exclusão em segundo plano para {0} (fora de {1}) lotes de histórico de versão antiga (exclusão incompleta) em {2} secs
version_service.migration.delete.warn.skip2=Pulada a exclusão em segundo plano para {0} histórico de versão antiga (não migrou)

