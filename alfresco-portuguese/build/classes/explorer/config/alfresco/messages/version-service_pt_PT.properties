
# Version service externalised display strings

version_service.err_restore_exists=O n\ufffd {0} n\ufffdo pode ser restaurado porque ele j\ufffd existe.
version_service.err_not_found=O r\ufffdtulo da vers\ufffdo atual do n\ufffd n\ufffdo existe no hist\ufffdrico.
version_service.err_unsupported=A implementa\ufffd\ufffdo atual do servi\ufffdo vers\ufffdo oferece suporte \ufffd cria\ufffd\ufffdo de sucursais.
version_service.err_one_preceeding=A implementa\ufffd\ufffdo atual do servi\ufffdo vers\ufffdo s\ufffd oferece suporte a uma vers\ufffdo anterior.
version_service.err_restore_no_version=O n\ufffd {0} n\ufffdo pode ser restaurado uma vez que n\ufffdo h\ufffd nenhuma informa\ufffd\ufffdo de vers\ufffdo dispon\ufffdvel para esse n\ufffd.
version_service.err_revert_mismatch=A vers\ufffdo fornecida para reverter para n\ufffdo vem do hist\ufffdrico de n\ufffds.


version_service.migration.patch.noop=Nenhuma a\ufffd\ufffdo (nenhum hist\ufffdrico de vers\ufffdo encontrado no armazenamento de vers\ufffdo antiga)

version_service.migration.patch.complete=Migra\ufffd\ufffdo conclu\ufffdda - migrados {0} (fora de {1}) hist\ufffdricos de vers\ufffdes antigas (para armazenamento de nova vers\ufffdo) em {2} segundos (deleteImmediately = {3})
version_service.migration.patch.in_progress=Migra\ufffd\ufffdo em processo - migrados {0} (fora de {1}) hist\ufffdricos de vers\ufffdes antigas (para armazenamento de nova vers\ufffdo) em {2} segundos (deleteImmediately = {3})
version_service.migration.patch.warn.skip1=Migra\ufffd\ufffdo ignorada de {0} (fora de {1}) lotes de hist\ufffdricos de vers\ufffdes antigas (migra\ufffd\ufffdo incompleta) em {2} secs
version_service.migration.patch.warn.skip2=Migra\ufffd\ufffdo ignorada de {0} hist\ufffdrico de vers\ufffdes antigas (j\ufffd migradas)

version_service.migration.delete.complete=Terminada a exclus\ufffdo em segundo plano para {0} (fora de {1}) migrado hist\ufffdrico de vers\ufffdo (do armazenamento de vers\ufffdes antigas) em {2} secs
version_service.migration.delete.warn.skip1=Pulada a exclus\ufffdo em segundo plano para {0} (fora de {1}) lotes de hist\ufffdrico de vers\ufffdo antiga (exclus\ufffdo incompleta) em {2} secs
version_service.migration.delete.warn.skip2=Pulada a exclus\ufffdo em segundo plano para {0} hist\ufffdrico de vers\ufffdo antiga (n\ufffdo migrou)

